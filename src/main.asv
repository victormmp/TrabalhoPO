%% Trabalho de PO
% Bruno Pereira, Murilo Menezes, Thiago Mattar, Victor Magalhaes

%% ClearENV
clc
clear
close all force
%

%%

%% Parâmetros Fixos de Modelo
% Carrega influence j, que é o modelo de quanto varia, são as variaveis
    % influence_low_j (il_j)
    % influence_medium_j (im_j)
    % influence_high_j (ih_j)
% do modelo. (-4 é j = 0, -3 é j = 1... até 4 e j = 9)
PAR_INFLUENCE = importfileVariations("../Dados/Variations.csv", 2, 10);

% Carrega os inputs que são os parâmetros de cada categoria
PAR_CATEGORIES = importfileInput("../Dados/Input.csv", 2, 10);

%% Parâmetros Definidos pelo Usuário

% Carrega os parâmetros que são relacionados ao modelo de entendimento do
% problema
% Cada módulo adicionado ou removido, há uma variação de pontos percentuais
% no draw

%PAR_crossSellInfluence_ics = input('Insira Influencia de CrossSell (em %): ');

PAR_crossSellInfluence_ics = 0.5;
PAR_boundaries = [3, 6]; %<= 3 low, <=6 medium, >6 high
% Numero de Modulos
MOD = 9;

% Define o tempo maximo de execucao
tempo = 120;

% Total de Tickets por Ano
PAR_ticketsPerYear_tm = 144000;

%% Pre-processamento de inputs
%   Infere numero de Categorias
M = height(PAR_CATEGORIES);

%   Infere se a influencia de cada categoria é low, medium ou high
for i = 1:M
    if PAR_CATEGORIES.modulosAsIs_ai(i) <= PAR_boundaries(1)
        PAR_CATEGORIES.Low_ali(i) = 1;
        PAR_CATEGORIES.Medium_ami(i) = 0;
        PAR_CATEGORIES.High_ahi(i) = 0;
        
    elseif PAR_CATEGORIES.modulosAsIs_ai(i) <= PAR_boundaries(2)
        PAR_CATEGORIES.Low_ali(i) = 0;
        PAR_CATEGORIES.Medium_ami(i) = 1;
        PAR_CATEGORIES.High_ahi(i) = 0;        
    else
        PAR_CATEGORIES.Low_ali(i) = 0;
        PAR_CATEGORIES.Medium_ami(i) = 0;
        PAR_CATEGORIES.High_ahi(i) = 1;            
    end
end

%% Gera Modelo

% Tabela com as variacoes percentuais
var = table2array(PAR_INFLUENCE);

% asIs_low
ail = PAR_CATEGORIES.Low_ali;
% asIs_medium
aim = PAR_CATEGORIES.Medium_ami;
% asIs_high
aih = PAR_CATEGORIES.High_ahi;

%% Escreve Modelo

fid = fopen('model.lp','wt');

fprintf(fid, '//Implementando a funcao objetivo\n');
fprintf(fid, 'max: ');
fobj = '';

% Incluindo Lucro Direto
for i = 1:M
    fobj = strcat(fobj, num2str(PAR_CATEGORIES.unitsSold_ui(i)),'*', ...
        num2str(PAR_CATEGORIES.grossMargin_mi(i)),'*',...
        num2str(PAR_CATEGORIES.unitPrice_pi(i)),'*(',...
        '1 +');
    for j = 1:MOD
        fobj = strcat(fobj,'y[',num2str(i),'][',num2str(j),']*',...
            num2str(ail(i).*PAR_INFLUENCE.low_il_j(j)),'+');
        fobj = strcat(fobj,'y[',num2str(i),'][',num2str(j),']*',...
            num2str(aim(i).*PAR_INFLUENCE.medium_im_j(j)),'+');
        fobj = strcat(fobj,'y[',num2str(i),'][',num2str(j),']*',...
            num2str(aih(i).*PAR_INFLUENCE.high_ih_j(j)));
        
        if(j ~= MOD)
            fobj = strcat(fobj,'+');
        end
    end
    if (i ~= M)
        fobj = strcat(fobj,'+');
    end
end
% Incluindo Lucro Indireto
fobj = strcat(fobj,'+');

for i = 1:M
    fobj = strcat(fobj,'(',num2str(PAR_CATEGORIES.categoryDraw_di(i)),'+(');
    
    for j = 1:MOD
        fobj = strcat(fobj,'y[',num2str(i),'][',num2str(j),']*(',...
            num2str(j),'-5)*0.5');
        if (j ~= MOD)
            fobj = strcat(fobj,'+');
        else
            fobj = strcat(fobj,')');
        end
    end
    
    fobj = strcat(fobj,'*',num2str(PAR_crossSellInfluence_ics),')',...
        '*0.01*',num2str(PAR_CATEGORIES.grossMarginCrossSell_mcsi(i)),'*',...
        num2str(PAR_CATEGORIES.crossSellAVGTicket_gi(i)),'*',...
        num2str(PAR_ticketsPerYear_tm));
    if (i~=M)
        fobj = strcat(fobj,'+');
    end    
end

fprintf(fid,[fobj ';']);

% Implementa Restricoes
fprintf(fid,'\n\n//Implementa Restricoes para y_ij unitarios\n');

for i = 1:M
    constraint = '';
    for j = 1:MOD
        constraint = strcat(constraint,'y[',num2str(i),'][',num2str(j),']');
        if (j ~= MOD)
            constraint = strcat(constraint,'+');
        else
            constraint = strcat(constraint,'>=1;\n');
        end
    end
    fprintf(fid, constraint);
end

fprintf(fid,'\n');

for i = 1:M
    constraint = '';
    for j = 1:MOD
        constraint = strcat(constraint,'y[',num2str(i),'][',num2str(j),']');
        if (j ~= MOD)
            constraint = strcat(constraint,'+');
        else
            constraint = strcat(constraint,'<=1;\n');
        end
    end
    fprintf(fid, constraint);
end

fprintf(fid, '\n//Implementa Restricoes para um modulo por categoria\n');

for i = 1:M
    for j = 1:MOD
        constraint = '';
        constraint = strcat(constraint,num2str(PAR_CATEGORIES.modulosAsIs_ai(i)),'+',...
            'y[',num2str(i),'][',num2str(j),...
            ']*(',num2str(j),'-5)*0.5>=1;\n');
    fprintf(fid, constraint);
    end
end

fprintf(fid, '\nImplementa restricao de draw positivo\n');

for i = 1:M
    for j = 1:MOD
        constraint = '(';
        constraint = strcat(constraint,num2str(PAR_CATEGORIES.categoryDraw_di(i)),...
            '+y[',num2str(i),'][',num2str(j),']*(',...
            num2str(j),'-5)*0.5*',num2str(PAR_crossSellInfluence_ics),...
            ')*0.01>=0;\n');
    fprintf(fid, constraint);
    end
end

fprintf(fid,'\n//Implementa restricao da variacao total no numero de modulos\n');

constraint = '';
for i = 1:M
    for j = 1:MOD
        constraint = strcat(constraint,'y[',num2str(i),'][',num2str(j),']*(',...
            num2str(j),'-5)*0.5');
        
        if (j ~= MOD)
            constraint = strcat(constraint,'+');
        end
    end
    
    if (i ~= M)
        constraint = strcat(constraint,'+');
    else
        constraint = strcat(constraint,'>=0;\n');
    end
end

fprintf(fid, constraint);

constraint = '\n';
for i = 1:M
    for j = 1:MOD
        constraint = strcat(constraint,'y[',num2str(i),'][',num2str(j),']*(',...
            num2str(j),'-5)*0.5');
        
        if (j ~= MOD)
            constraint = strcat(constraint,'+');
        end
    end
    
    if (i ~= M)
        constraint = strcat(constraint,'+');
    else
        constraint = strcat(constraint,'<=0;\n');
    end
end

fprintf(fid,constraint);

fprintf(fid,'\n//Implementa as restricoes de variavel binaria\n');

for i = 1:M
    for j = 1:MOD
        fprintf(fid,['bin y[' num2str(i) '][' num2str(j) '];\n']);
    end
end

fclose(fid);

disp('Arquivo modelo criado. Iniciando lpsolve');

command = ['lp_solve -s -timeout ' num2str(tempo) ' model.lp > out.txt'];
[status,cmdout] = system(command);

if (length(cmdout)>0)
    disp(['ERROR: ' cmdout]);
end







